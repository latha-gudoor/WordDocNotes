{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red0\green0\blue192;\red100\green100\blue100;
\red42\green0\blue255;\red106\green62\blue62;\red63\green127\blue95;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c0\c0\c75294;\csgenericrgb\c39216\c39216\c39216;
\csgenericrgb\c16471\c0\c100000;\csgenericrgb\c41569\c24314\c24314;\csgenericrgb\c24706\c49804\c37255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \
				//DataDrivenTesting\
//Scenerio: to login FB page with different user\'92s credentials stored in excelSheet\
// Using Apache POI for ExcelDataSheet\
\
package\cf0  data_driven_testing;\
\
\cf2 import\cf0  org.openqa.selenium.By;\
\
\
\cf2 import\cf0  org.openqa.selenium.WebDriver;\
\cf2 import\cf0  org.openqa.selenium.firefox.FirefoxDriver;\
\cf2 import\cf0  org.testng.Assert;\
\cf2 import\cf0  org.testng.annotations.AfterMethod;\
\cf2 import\cf0  org.testng.annotations.DataProvider;\
\cf2 import\cf0  org.testng.annotations.Test;\
\
\cf2 import\cf0  library.ExcelDataConfig;\
\
\cf2 public\cf0  \cf2 class\cf0  ValidateFBLoginPageExcel \{\
	\
	WebDriver \cf3 driver\cf0 ;\
	\
	\cf4 @Test\cf0 (dataProvider = \cf5 "facebookData"\cf0 )\
	\cf2 public\cf0  \cf2 void\cf0  LoginCredentialCheck(String \cf6 username\cf0 , String \cf6 password\cf0 ) \cf2 throws\cf0  InterruptedException\
	\{\
		System.setProperty(\cf5 "webdriver.gecko.driver"\cf0 , \cf5 "/Users/Sumathi/Desktop/geckodriver"\cf0 );\
		\cf3 driver\cf0  = \cf2 new\cf0  FirefoxDriver();\
		\cf3 driver\cf0 .manage().window().maximize();\
		\
		\cf3 driver\cf0 .get(\cf5 "https://www.facebook.com/"\cf0 );\
		\cf3 driver\cf0 .findElement(By.id(\cf5 "email"\cf0 )).sendKeys(\cf6 username\cf0 );\
		\cf3 driver\cf0 .findElement(By.id(\cf5 "pass"\cf0 )).sendKeys(\cf6 password\cf0 );\
		\cf3 driver\cf0 .findElement(By.id(\cf5 "u_0_q"\cf0 )).click();\
		\
		Thread.sleep(5000);\
		\
		Assert.assertEquals(\cf3 driver\cf0 .getTitle(), \cf5 "Facebook"\cf0 , \cf5 "User unable to login: invalid credential"\cf0 );\
		System.\cf3 out\cf0 .println(\cf5 "page title is verified :user login is successful"\cf0 );\
		\
	\}\
	\cf4 @AfterMethod\cf0 \
	\cf2 public\cf0  \cf2 void\cf0  tearDown()\{\
		\cf3 driver\cf0 .quit();	\
	\}\
	\
	\
	\cf4 @DataProvider\cf0 (name=\cf5 "facebookData"\cf0 )\
	\cf2 public\cf0  Object[][] passData()\
	\{\
		\
		ExcelDataConfig \cf6 config\cf0  = \cf2 new\cf0  ExcelDataConfig(\cf5 "/Users/Sumathi/Documents/workspace/automationFramework/resources/data/inputData.xlsx"\cf0 );\
		\
		\cf2 int\cf0  \cf6 rows\cf0  = \cf6 config\cf0 .getRowCount(0); \cf7 // to get the sheet index 0 (sheet 1)\cf0 \
		\
		Object[][] \cf6 data\cf0  = \cf2 new\cf0  Object[\cf6 rows\cf0 ][2]; \cf7 // size of rows and columns\cf0 \
		\
		\cf2 for\cf0 (\cf2 int\cf0  \cf6 i\cf0 =0 ; \cf6 i\cf0 <\cf6 rows\cf0  ; \cf6 i\cf0 ++) \cf7 // get the data from excel sheet and store it in 2D array\cf0 \
		\{\
			\cf6 data\cf0 [\cf6 i\cf0 ][0]=\cf6 config\cf0 .getData(0, \cf6 i\cf0 , 0); \cf7 //reads data from rows and \ul col\ulnone  #0\cf0 \
			\cf6 data\cf0 [\cf6 i\cf0 ][1]=\cf6 config\cf0 .getData(0, \cf6 i\cf0 , 1); \cf7 //reads data from rows and \ul col\ulnone  #1\cf0 \
		\}\
		\
	\
	\cf2 return\cf0  \cf6 data\cf0 ;\
\
\}\
\}\
\
\
\
________________________________________________________________\
// Using 2D array\
\cf2 package\cf0  data_driven_testing;\
\
\cf2 import\cf0  org.openqa.selenium.By;\
\
\cf2 import\cf0  org.openqa.selenium.WebDriver;\
\cf2 import\cf0  org.openqa.selenium.firefox.FirefoxDriver;\
\cf2 import\cf0  org.testng.Assert;\
\cf2 import\cf0  org.testng.annotations.AfterMethod;\
\cf2 import\cf0  org.testng.annotations.DataProvider;\
\cf2 import\cf0  org.testng.annotations.Test;\
\
\cf2 public\cf0  \cf2 class\cf0  ValidateFBLoginPage \{\
	\
	WebDriver \cf3 driver\cf0 ;\
	\
	\cf4 @Test\cf0 (dataProvider = \cf5 "facebookData"\cf0 )\
	\cf2 public\cf0  \cf2 void\cf0  LoginCredentialCheck(String \cf6 username\cf0 , String \cf6 password\cf0 ) \cf2 throws\cf0  InterruptedException\
	\{\
		System.setProperty(\cf5 "webdriver.gecko.driver"\cf0 , \cf5 "/Users/Sumathi/Desktop/geckodriver"\cf0 );\
		\cf3 driver\cf0  = \cf2 new\cf0  FirefoxDriver();\
		\cf3 driver\cf0 .manage().window().maximize();\
		\
		\cf3 driver\cf0 .get(\cf5 "https://www.facebook.com/"\cf0 );\
		\cf3 driver\cf0 .findElement(By.id(\cf5 "email"\cf0 )).sendKeys(\cf6 username\cf0 );\
		\cf3 driver\cf0 .findElement(By.id(\cf5 "pass"\cf0 )).sendKeys(\cf6 password\cf0 );\
		\cf3 driver\cf0 .findElement(By.id(\cf5 "u_0_q"\cf0 )).click();\
		\
		Thread.sleep(5000);\
		\
		Assert.assertEquals(\cf3 driver\cf0 .getTitle(), \cf5 "Facebook"\cf0 , \cf5 "User unable to login: invalid credential"\cf0 );\
		System.\cf3 out\cf0 .println(\cf5 "page title is verified :user login is successful"\cf0 );\
		\
	\}\
	\cf4 @AfterMethod\cf0 \
	\cf2 public\cf0  \cf2 void\cf0  tearDown()\{\
		\cf3 driver\cf0 .quit();	\
	\}\
		\
	\cf4 @DataProvider\cf0 (name=\cf5 "facebookData"\cf0 )\
	\
	\cf2 public\cf0  Object[][] passData()\
	\{\
		Object[][] \cf6 data\cf0  = \cf2 new\cf0  Object[3][2];\
		\
		\cf6 data\cf0 [0][0] = \cf5 \'93xyz@gmail.com"\cf0 ;\
		\cf6 data\cf0 [0][1] = \cf5 "test@12"\cf0 ;\
		\
		\cf6 data\cf0 [1][0] = \cf5 \'93abc@gmail.com"\cf0 ;\
		\cf6 data\cf0 [1][1] = \cf5 "test@123"\cf0 ;\
		\
		\cf6 data\cf0 [2][0] = \cf5 \'93pqrst@gmail.com"\cf0 ;\
		\cf6 data\cf0 [2][1] = \cf5 "test@457"\cf0 ;\
	\
	\cf2 return\cf0  \cf6 data\cf0 ;\
\
\}\
\}\
\
\
_________________________________________________________________\
\
//Class to config the ExcelDataSheet\
\cf2 package\cf0  library;\
\
\cf2 import\cf0  java.io.File;\
\
\cf2 import\cf0  java.io.FileInputStream;\
\
\cf2 import\cf0  org.apache.poi.xssf.usermodel.XSSFSheet;\
\cf2 import\cf0  org.apache.poi.xssf.usermodel.XSSFWorkbook;\
\
\pard\pardeftab720\partightenfactor0
\cf7 //load and read the data from excel sheet\cf0 \
\pard\pardeftab720\partightenfactor0
\cf2 public\cf0  \cf2 class\cf0  ExcelDataConfig \{\
	\
	XSSFWorkbook \cf3 wb\cf0 ;\
	\
	XSSFSheet \cf3 sheet1\cf0 ;\
	\
	\cf7 // parameterized constructor to load the excel sheet\cf0 \
	\cf2 public\cf0  ExcelDataConfig(String \cf6 excelPath\cf0 )\
	\
	\{\
		\cf2 try\cf0  \{\
			File \cf6 src\cf0  = \cf2 new\cf0  File(\cf6 excelPath\cf0 ); \cf7 //loading the excel sheet\cf0 \
			\
			FileInputStream \cf6 fis\cf0  = \cf2 new\cf0  FileInputStream(\cf6 src\cf0 ); \cf7 //load excel sheet in form of bytes\cf0 \
			\
			\cf3 wb\cf0  = \cf2 new\cf0  XSSFWorkbook(\cf6 fis\cf0 );    \cf7 //class from apache.poi, reads the complete workbook\cf0 \
		\
		\} \cf2 catch\cf0  (Exception \cf6 e\cf0 ) \{   \cf7 // to handle any exception during Excel file reading\cf0 \
			\
			System.\cf3 out\cf0 .println(\cf6 e\cf0 .getMessage());\
			\
		\}\
		\
	\}\
\
	\cf7 // parameterized method to get sheet #, row, column and read the corresponding data\cf0 \
	\
	\cf2 public\cf0  String getData(\cf2 int\cf0  \cf6 sheetNumber\cf0 , \cf2 int\cf0  \cf6 row\cf0 , \cf2 int\cf0  \cf6 column\cf0 )\
	\{\
		\cf3 sheet1\cf0  = \cf3 wb\cf0 .getSheetAt(\cf6 sheetNumber\cf0 );\
		\
		String \cf6 data\cf0  = \cf3 sheet1\cf0 .getRow(\cf6 row\cf0 ).getCell(\cf6 column\cf0 ).getStringCellValue();\cf7 //returns the data from sheet#, row and column\cf0 \
		\
		\cf2 return\cf0  \cf6 data\cf0 ;\
		\
	\}\
	\
	\cf7 //Method to read # of rows in the Excel sheet\cf0 \
	\cf2 public\cf0  \cf2 int\cf0  getRowCount(\cf2 int\cf0  \cf6 sheetIndex\cf0 )\
	\{\
		\cf2 int\cf0  \cf6 row\cf0  = \cf3 wb\cf0 .getSheetAt(\cf6 sheetIndex\cf0 ).getLastRowNum(); \cf7 // returns index value of the last row\cf0 \
		\cf6 row\cf0 = \cf6 row\cf0 +1;\
		\cf2 return\cf0  \cf6 row\cf0 ;\
	\}\
	\
\}\
}